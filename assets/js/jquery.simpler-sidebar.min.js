/*! simpler-sidebar v2.0.1 (https://github.com/simple-sidebar/simpler-sidebar#readme)
 ** Copyright (c) 2015 - 2016 Davide Di Criscito
 ** Dual licensed under MIT and GPL-2.0
 */
! function (a, b, c, d) {
    "use strict";
    var e = "simplerSidebar";
    a.fn[e] = function (c) {
        var d = a.extend(!0, {
            attr: "simplersidebar"
            , top: 0
            , gap: 64
            , zIndex: 3e3
            , sidebar: {
                width: 350
            }
            , animation: {
                duration: 500
                , easing: "swing"
            }
            , events: {
                on: {
                    animation: {
                        open: function () {}
                        , close: function () {}
                        , both: function () {}
                    }
                }
                , callbacks: {
                    animation: {
                        open: function () {}
                        , close: function () {}
                        , both: function () {}
                        , freezePage: !0
                    }
                }
            }
            , mask: {
                display: !0
                , css: {
                    backgroundColor: "black"
                    , opacity: .5
                    , filter: "Alpha(opacity=50)"
                }
            }
        }, c);
        return this.each(function () {
            var c, e, f, g = "data-" + d.attr
                , h = "opened" === d.init ? "opened" : "closed"
                , i = "left" === d.align ? "left" : "right"
                , j = d.animation.duration
                , k = d.animation.easing
                , l = {}
                , m = !0 === d.events.callbacks.animation.freezePage
                , n = a(this)
                , o = d.selectors.trigger ? a(d.selectors.trigger) : ".toggle-sidebar"
                , p = d.selectors.quitter ? a(d.selectors.quitter) : ".close-btn"
                , q = a("<div>").attr(g, "mask")
                , r = a(b).width()
                , s = function (a) {
                    return a < d.sidebar.width + d.gap ? a - d.gap : d.sidebar.width
                }
                , t = function () {
                    return n.attr(g)
                }
                , u = function (a) {
                    n.attr(g, a)
                }
                , v = function () {
                    q.appendTo("body").css(f)
                }
                , w = function () {
                    q.fadeIn(j)
                }
                , x = function () {
                    q.fadeOut(j)
                }
                , y = {
                    on: {
                        animation: {
                            open: function () {
                                w(), u("opened"), d.events.on.animation.open()
                            }
                            , close: function () {
                                x(), u("closed"), d.events.on.animation.close()
                            }
                            , both: function () {
                                d.events.on.animation.both()
                            }
                        }
                    }
                    , callbacks: {
                        animation: {
                            open: function () {
                                !0 === m && a("body, html").css("border", "0"), d.events.callbacks.animation.open()
                            }
                            , close: function () {
                                !0 === m && a("body, html").css("border", "0"), d.events.callbacks.animation.close()
                            }
                            , both: function () {
                                d.events.callbacks.animation.both()
                            }
                        }
                    }
                }
                , z = function () {
                    var a = function () {
                        y.callbacks.animation.open(), y.callbacks.animation.both()
                    };
                    l[i] = 0, n.animate(l, j, k, a), y.on.animation.open(), y.on.animation.both()
                }
                , A = function () {
                    var a = function () {
                        y.callbacks.animation.close(), y.callbacks.animation.both()
                    };
                    l[i] = -n.width(), n.animate(l, j, k, a), y.on.animation.close(), y.on.animation.both()
                };
            c = {
                position: "fixed"
                , top: parseInt(d.top)
                , bottom: 0
                , width: s(r)
                , zIndex: d.zIndex
            }, c[i] = "closed" === h ? -s(r) : 0, n.css(c).attr(g, h), e = {
                position: "fixed"
                , top: parseInt(d.top)
                , right: 0
                , bottom: 0
                , left: 0
                , zIndex: d.zIndex - 1
                , display: "none"
            }, f = a.extend(!0, e, d.mask.css), !0 === d.mask.display && v(), o.click(function () {
                "opened" === t() ? A() : "closed" === t() && z()
            }), q.click(A), n.on("click", p, A), a(b).resize(function () {
                var c = a(b).width();
                n.css("width", s(c)), "closed" === t() && n.css(i, -n.width())
            })
        })
    }
}(jQuery, window, document);